// Framework.
$fonts: (
    sans:               #{"Helvetica, Ariel, sans-serif"},
    widesans:           #{"Roboto,Verdana,Geneva,sans-serif"},
    serif:              #{"'Roboto Slab Thin','Times New Roman', Times, serif"},
    wideserif:          #{"'Roboto Slab',Georgia,Utopia,Charter,serif"},
    mono:               #{"Consolas,monaco,monospace"}
);

@function font($key) {
    @if map-has-key($fonts, $key) {
        @return map-get($fonts, $key);
    }
    @warn "Unknown font stack '#{$key}'";
    @return null;
}

@function config($key) {
	@if map-has-key($config, $key) {
		@return map-get($config, $key);
	}
	@warn "Unknown key `#{$key}` in $config";
	@return null;
}

@function columns($key) {
	@if map-has-key($config, columns) {
		@return percentage($key / map-get($config, columns));
	}
	@warn "No column count set in $config";
	@return null;
}

@mixin screen-size($size) {
	@if map-has-key($breakpoints, $size) {
		@media (min-width: #{map-get($breakpoints, $size)}) {
			@content;
		}
	}
	@else {
		@warn "Unknown size `#{$key}` in $breakpoints";
	}
}

@mixin screen-max($size) {
    @if map-has-key($breakpoints, $size) {
        @media (max-width: #{map-get($breakpoints, $size) - 1}) {
            @content;
        }
    }
    @else {
        @warn "Unknown size `#{$key}` in $breakpoints";
    }
}

@mixin transition($property:all, $duration:config(animation)) {
	transition: $property $duration ease-in-out;
}
//                boocity  Boo City-webfont boocity
//                socicon  socicon-webfont  socicon
@mixin font-face($style-name, $file, $family, $category:"") {
    $filepath: "/fonts/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}

// Classes.
%centered {
	margin: 0 auto;
	max-width: config(max-width);
    width: config(width);
}

%clearfix {
    &:before, &:after {
        content: '';
        display: table;
    }
    &:after {
        clear: both;
    }
    & {
        zoom: 1;
    }
}